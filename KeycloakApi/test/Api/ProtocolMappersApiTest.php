<?php
/**
 * ProtocolMappersApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  WebMI\KeycloakApiClient\KeycloakApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Keycloak Admin REST API
 *
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace WebMI\KeycloakApiClient\KeycloakApi\Test\Api;

use \WebMI\KeycloakApiClient\KeycloakApi\Configuration;
use \WebMI\KeycloakApiClient\KeycloakApi\ApiException;
use \WebMI\KeycloakApiClient\KeycloakApi\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ProtocolMappersApiTest Class Doc Comment
 *
 * @category Class
 * @package  WebMI\KeycloakApiClient\KeycloakApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ProtocolMappersApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for adminRealmsRealmClientScopesClientScopeIdProtocolMappersAddModelsPost
     *
     * Create multiple mappers.
     *
     */
    public function testAdminRealmsRealmClientScopesClientScopeIdProtocolMappersAddModelsPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsGet
     *
     * Get mappers.
     *
     */
    public function testAdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsIdDelete
     *
     * Delete the mapper.
     *
     */
    public function testAdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsIdGet
     *
     * Get mapper by id.
     *
     */
    public function testAdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsIdPut
     *
     * Update the mapper.
     *
     */
    public function testAdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsIdPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsPost
     *
     * Create a mapper.
     *
     */
    public function testAdminRealmsRealmClientScopesClientScopeIdProtocolMappersModelsPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmClientScopesClientScopeIdProtocolMappersProtocolProtocolGet
     *
     * Get mappers by name for a specific protocol.
     *
     */
    public function testAdminRealmsRealmClientScopesClientScopeIdProtocolMappersProtocolProtocolGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmClientTemplatesClientScopeIdProtocolMappersAddModelsPost
     *
     * Create multiple mappers.
     *
     */
    public function testAdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersAddModelsPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsGet
     *
     * Get mappers.
     *
     */
    public function testAdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsIdDelete
     *
     * Delete the mapper.
     *
     */
    public function testAdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsIdGet
     *
     * Get mapper by id.
     *
     */
    public function testAdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsIdPut
     *
     * Update the mapper.
     *
     */
    public function testAdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsIdPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsPost
     *
     * Create a mapper.
     *
     */
    public function testAdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersModelsPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmClientTemplatesClientScopeIdProtocolMappersProtocolProtocolGet
     *
     * Get mappers by name for a specific protocol.
     *
     */
    public function testAdminRealmsRealmClientTemplatesClientScopeIdProtocolMappersProtocolProtocolGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmClientsClientUuidProtocolMappersAddModelsPost
     *
     * Create multiple mappers.
     *
     */
    public function testAdminRealmsRealmClientsClientUuidProtocolMappersAddModelsPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmClientsClientUuidProtocolMappersModelsGet
     *
     * Get mappers.
     *
     */
    public function testAdminRealmsRealmClientsClientUuidProtocolMappersModelsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmClientsClientUuidProtocolMappersModelsIdDelete
     *
     * Delete the mapper.
     *
     */
    public function testAdminRealmsRealmClientsClientUuidProtocolMappersModelsIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmClientsClientUuidProtocolMappersModelsIdGet
     *
     * Get mapper by id.
     *
     */
    public function testAdminRealmsRealmClientsClientUuidProtocolMappersModelsIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmClientsClientUuidProtocolMappersModelsIdPut
     *
     * Update the mapper.
     *
     */
    public function testAdminRealmsRealmClientsClientUuidProtocolMappersModelsIdPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmClientsClientUuidProtocolMappersModelsPost
     *
     * Create a mapper.
     *
     */
    public function testAdminRealmsRealmClientsClientUuidProtocolMappersModelsPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmClientsClientUuidProtocolMappersProtocolProtocolGet
     *
     * Get mappers by name for a specific protocol.
     *
     */
    public function testAdminRealmsRealmClientsClientUuidProtocolMappersProtocolProtocolGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
