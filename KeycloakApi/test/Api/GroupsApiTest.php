<?php
/**
 * GroupsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  WebMI\KeycloakApiClient\KeycloakApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Keycloak Admin REST API
 *
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace WebMI\KeycloakApiClient\KeycloakApi\Test\Api;

use \WebMI\KeycloakApiClient\KeycloakApi\Configuration;
use \WebMI\KeycloakApiClient\KeycloakApi\ApiException;
use \WebMI\KeycloakApiClient\KeycloakApi\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * GroupsApiTest Class Doc Comment
 *
 * @category Class
 * @package  WebMI\KeycloakApiClient\KeycloakApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class GroupsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for adminRealmsRealmGroupsCountGet
     *
     * Returns the groups counts..
     *
     */
    public function testAdminRealmsRealmGroupsCountGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmGroupsGet
     *
     * Get group hierarchy.  Only name and ids are returned..
     *
     */
    public function testAdminRealmsRealmGroupsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmGroupsGroupIdChildrenGet
     *
     * Return a paginated list of subgroups that have a parent group corresponding to the group on the URL.
     *
     */
    public function testAdminRealmsRealmGroupsGroupIdChildrenGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmGroupsGroupIdChildrenPost
     *
     * Set or create child..
     *
     */
    public function testAdminRealmsRealmGroupsGroupIdChildrenPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmGroupsGroupIdDelete
     *
     * .
     *
     */
    public function testAdminRealmsRealmGroupsGroupIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmGroupsGroupIdGet
     *
     * .
     *
     */
    public function testAdminRealmsRealmGroupsGroupIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmGroupsGroupIdManagementPermissionsGet
     *
     * Return object stating whether client Authorization permissions have been initialized or not and a reference.
     *
     */
    public function testAdminRealmsRealmGroupsGroupIdManagementPermissionsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmGroupsGroupIdManagementPermissionsPut
     *
     * Return object stating whether client Authorization permissions have been initialized or not and a reference.
     *
     */
    public function testAdminRealmsRealmGroupsGroupIdManagementPermissionsPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmGroupsGroupIdMembersGet
     *
     * Get users Returns a stream of users, filtered according to query parameters.
     *
     */
    public function testAdminRealmsRealmGroupsGroupIdMembersGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmGroupsGroupIdPut
     *
     * Update group, ignores subgroups..
     *
     */
    public function testAdminRealmsRealmGroupsGroupIdPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmGroupsPost
     *
     * create or add a top level realm groupSet or create child..
     *
     */
    public function testAdminRealmsRealmGroupsPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
