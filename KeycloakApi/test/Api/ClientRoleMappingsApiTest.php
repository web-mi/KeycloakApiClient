<?php
/**
 * ClientRoleMappingsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  WebMI\KeycloakApiClient\KeycloakApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Keycloak Admin REST API
 *
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace WebMI\KeycloakApiClient\KeycloakApi\Test\Api;

use \WebMI\KeycloakApiClient\KeycloakApi\Configuration;
use \WebMI\KeycloakApiClient\KeycloakApi\ApiException;
use \WebMI\KeycloakApiClient\KeycloakApi\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ClientRoleMappingsApiTest Class Doc Comment
 *
 * @category Class
 * @package  WebMI\KeycloakApiClient\KeycloakApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ClientRoleMappingsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for adminRealmsRealmGroupsGroupIdRoleMappingsClientsClientIdAvailableGet
     *
     * Get available client-level roles that can be mapped to the user or group.
     *
     */
    public function testAdminRealmsRealmGroupsGroupIdRoleMappingsClientsClientIdAvailableGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmGroupsGroupIdRoleMappingsClientsClientIdCompositeGet
     *
     * Get effective client-level role mappings This recurses any composite roles.
     *
     */
    public function testAdminRealmsRealmGroupsGroupIdRoleMappingsClientsClientIdCompositeGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmGroupsGroupIdRoleMappingsClientsClientIdDelete
     *
     * Delete client-level roles from user or group role mapping.
     *
     */
    public function testAdminRealmsRealmGroupsGroupIdRoleMappingsClientsClientIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmGroupsGroupIdRoleMappingsClientsClientIdGet
     *
     * Get client-level role mappings for the user or group, and the app.
     *
     */
    public function testAdminRealmsRealmGroupsGroupIdRoleMappingsClientsClientIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmGroupsGroupIdRoleMappingsClientsClientIdPost
     *
     * Add client-level roles to the user or group role mapping.
     *
     */
    public function testAdminRealmsRealmGroupsGroupIdRoleMappingsClientsClientIdPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmUsersUserIdRoleMappingsClientsClientIdAvailableGet
     *
     * Get available client-level roles that can be mapped to the user or group.
     *
     */
    public function testAdminRealmsRealmUsersUserIdRoleMappingsClientsClientIdAvailableGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmUsersUserIdRoleMappingsClientsClientIdCompositeGet
     *
     * Get effective client-level role mappings This recurses any composite roles.
     *
     */
    public function testAdminRealmsRealmUsersUserIdRoleMappingsClientsClientIdCompositeGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmUsersUserIdRoleMappingsClientsClientIdDelete
     *
     * Delete client-level roles from user or group role mapping.
     *
     */
    public function testAdminRealmsRealmUsersUserIdRoleMappingsClientsClientIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmUsersUserIdRoleMappingsClientsClientIdGet
     *
     * Get client-level role mappings for the user or group, and the app.
     *
     */
    public function testAdminRealmsRealmUsersUserIdRoleMappingsClientsClientIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for adminRealmsRealmUsersUserIdRoleMappingsClientsClientIdPost
     *
     * Add client-level roles to the user or group role mapping.
     *
     */
    public function testAdminRealmsRealmUsersUserIdRoleMappingsClientsClientIdPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
